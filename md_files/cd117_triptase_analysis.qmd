---
title: "CD117_Triptase_anaylsis"
subtitle: "tidied by sean :)"
author: "Ramon Lorenzo"
project:
  execute-dir: project
date: today
format:
  html:
    toc: true
    page-layout: full
    embed-resources: true
    code-fold: true
    code-tools: true
    link-external-newwindow: true
execute:
  warning: false
from: markdown+emoji 
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages-data

library(tidyverse)
library(ggpubr)
library(ggsci)
library(gt)
library(emmeans)

triptase <- read_csv("data/R21_PathCore.csv") |>
  janitor::clean_names(replace=janitor:::mu_to_u) |> 
  mutate(donor = factor(donor),
         replicate = factor(replicate),
         positive = as.numeric(as.character(positive)),
         percent_pos = (positive/total_cells)*100,
         percent_pos_by_area = percent_pos/log10(area_um_2))
```


## Initial Visualizations

lets take a look at some variables--

```{r}
triptase %>%
  ggplot(aes(x = condition, y = positive, color = target_cell)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_lancet() + 
  facet_grid(group ~ tissue, scales = "free") +
  rotate_x_text(90)


triptase %>%
  ggplot(aes(x = condition, y = percent_pos, color = target_cell)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_lancet() + 
  facet_grid(group ~ tissue, scales = "free") +
  rotate_x_text(90)

triptase %>%
  ggplot(aes(x = condition, y = total_cells, color = target_cell)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_lancet() + 
  facet_grid(group ~ tissue, scales = "free") +
  rotate_x_text(90)

triptase %>%
  ggplot(aes(x = condition, y = area_um_2, color = target_cell)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_lancet() + 
  facet_grid(group ~ tissue, scales = "free") +
  rotate_x_text(90)

triptase %>%
  ggplot(aes(x = condition, y = percent_pos_by_area, color = target_cell)) +
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_lancet() + 
  facet_grid(group ~ tissue)

triptase %>%
  ggplot(aes(
    x = interaction(group, condition),
    y = percent_pos_by_area,
    color = target_cell
  )) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_lancet() + 
  facet_grid(. ~ tissue) + 
  rotate_x_text(45)

```



## NON INFECTED MODEL

here's a model with just the uninfected tissues-- what's going on in non-infected case?

```{r}
non_infected <- triptase |>
  filter(group == "Non Infected")

non_infected_model <-
  lme4::lmer(
    log10(percent_pos_by_area) ~ condition * tissue * target_cell + (1 | donor),
    data = non_infected
  )

summary(non_infected_model)
a <- pairs(lsmeans(non_infected_model, ~ tissue))
b <- pairs(lsmeans(non_infected_model, ~ condition))
c <- pairs(lsmeans(non_infected_model, ~ target_cell))
b.a.c <- pairs(lsmeans(non_infected_model, ~ condition | tissue | target_cell))
b.c.a <- pairs(lsmeans(non_infected_model, ~  target_cell | condition | tissue))
rbind(a, b, c, b.c.a, b.a.c, adjust = "fdr")
pairs(lsmeans(non_infected_model, ~ condition |
                tissue | target_cell), adjust = "fdr")
pairs(lsmeans(non_infected_model, ~ condition | tissue), adjust = "fdr")

qqnorm(resid(non_infected_model))
qqline(resid(non_infected_model))
hist(resid(non_infected_model))
plot(fitted(non_infected_model), resid(non_infected_model))
abline(h = 0)
```

```{r}
#| label: signif-peek-uninfected

non_infected |>
  filter(tissue == "Shaft") |>
  ggplot(aes(x = condition, y = percent_pos_by_area, color = condition)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_npg() + 
  #facet_grid(condition ~ tissue) + 
  rotate_x_text(45)

```

## INFECTED MODEL

We can then compare that to the infected case:

```{r}
infected <- triptase |>
  filter(group == "4h HIV")

infected_model <-
  lme4::lmer(
    log10(percent_pos_by_area) ~ condition * tissue * target_cell + (1|donor),
    data = infected
  )
summary(infected_model)
a <- pairs(lsmeans(infected_model, ~ tissue))
b <- pairs(lsmeans(infected_model, ~ condition))
c <- pairs(lsmeans(infected_model, ~ target_cell))
b.a.c <- pairs(lsmeans(infected_model, ~ condition | tissue | target_cell))
b.c.a <- pairs(lsmeans(infected_model, ~  target_cell | condition | tissue))

rbind(a, b, c, b.c.a, b.a.c, adjust = "fdr")
pairs(lsmeans(infected_model, ~ condition |
                tissue | target_cell), adjust = "fdr")
pairs(lsmeans(infected_model, ~ condition | tissue), adjust = "fdr")

qqnorm(resid(infected_model))
qqline(resid(infected_model))
hist(resid(infected_model))
plot(fitted(infected_model), resid(infected_model))
abline(h = 0)

```


## paired samples

additionally, we can look just at samples that are paired between the two sections

```{r}
# get only donors that have paired infected samples
Donors_w4h <- unique(filter(triptase, group == "4h HIV")$donor)

triptase_paired <-
  triptase %>% 
  filter(donor %in% Donors_w4h)

triptase_paired %>%
  ggplot(aes(x = target_cell, y = percent_pos_by_area, color = group)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_npg() + 
  facet_grid(condition ~ tissue) + 
  rotate_x_text(45)

paired_glans <- triptase_paired |> 
  filter(tissue == "Glans")

paired_glans_model <-
  lme4::lmer(
    log10(percent_pos_by_area) ~ condition * group * target_cell + (1|donor),
    data = paired_glans
  )

summary(paired_glans_model)
a <- pairs(lsmeans(paired_glans_model, ~ group))
b <- pairs(lsmeans(paired_glans_model, ~ condition))
c <- pairs(lsmeans(paired_glans_model, ~ target_cell))
b.a.c <- pairs(lsmeans(paired_glans_model, ~ group | condition | target_cell))
b.c.a <- pairs(lsmeans(paired_glans_model, ~  condition | group | target_cell))
c.b.a <- pairs(lsmeans(paired_glans_model, ~  target_cell | condition | group))

rbind(a, b, c, b.c.a, b.a.c, c.b.a, adjust = "fdr") |>
  data.frame(stringsAsFactors = FALSE) |>
  mutate(p.value = round(p.value, 5)) |>
  mutate_at(c('estimate', 'SE', 'df', 't.ratio'), function(x){round(x, 2)}) |>
  rename(`p value` = p.value, `t-ratio` = t.ratio, `d.f.` = df) |>
  gt() |>
  cols_align('center') |>
  tab_source_note(
    source_note = "P value adjustment: FDR"
  ) |>
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      rows = `p value` < 0.05)
  ) |>
  tab_header(
    title = md("**GlansBigModel**")
  ) |>
  gt:::as.tags.gt_tbl()

```

and shaft counterpart 

```{r}

paired_shaft <- triptase_paired |> 
  filter(tissue == "Shaft")

paired_shaft_model <-
  lme4::lmer(
    log10(percent_pos_by_area) ~ condition * group * target_cell + (1|donor),
    data = paired_shaft
  )

summary(paired_shaft_model)
a <- pairs(lsmeans(paired_shaft_model, ~ group))
b <- pairs(lsmeans(paired_shaft_model, ~ condition))
c <- pairs(lsmeans(paired_shaft_model, ~ target_cell))
b.a.c <- pairs(lsmeans(paired_shaft_model, ~ group | condition | target_cell))
b.c.a <- pairs(lsmeans(paired_shaft_model, ~  condition | group | target_cell))
c.b.a <- pairs(lsmeans(paired_shaft_model, ~  target_cell | condition | group))

rbind(a, b, c, b.c.a, b.a.c, c.b.a, adjust = "fdr") |>
  data.frame(stringsAsFactors = FALSE) |>
  mutate(p.value = round(p.value, 5)) |>
  mutate_at(c('estimate', 'SE', 'df', 't.ratio'), function(x){round(x, 2)}) |>
  rename(`p value` = p.value, `t-ratio` = t.ratio, `d.f.` = df) |>
  gt() |>
  cols_align('center') |>
  tab_source_note(
    source_note = "P value adjustment: FDR"
  ) |>
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      rows = `p value` < 0.05)
  ) |>
  tab_header(
    title = md("**ShaftBigModel**")
  ) |>
  gt:::as.tags.gt_tbl()

```



```{r}
#| label: signif-peek

triptase_paired |>
  ggplot(aes(x = group, y = percent_pos_by_area, color = group)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_point(position = position_jitterdodge()) +
  theme_pubr() + scale_color_npg() + 
  #facet_grid(condition ~ tissue) + 
  rotate_x_text(45)

```


## mean 

we can also look at the mean values of cells per area in each of these groups:

```{r}
#| label: mean

triptase_mean <- triptase %>%
  group_by(condition, tissue, donor, group, target_cell) %>%
  summarise(mean_percent_pos_by_area = mean(percent_pos_by_area),
            mean_cells_per_area = mean(total_cells / (area_um_2 * 10 ^ -3)))


```



